<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AH/+AAB//gAA//8AAf//gAP//+AH/w==
</value>
  </data>
</root>